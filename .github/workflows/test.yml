name: Run Tests

on:
  push:
    branches: ['*']

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        # Temporarily focusing on macOS only
        # Will restore other platforms once macOS is fixed
        # os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Check Node.js and npm versions
        run: |
          node --version
          npm --version

      - name: Set up Python
        if: runner.os == 'macOS'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Build Tools
        if: runner.os == 'macOS'
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools
          python -m pip install wheel
          npm install -g node-gyp@9.4.0

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 make g++ build-essential libsqlite3-dev

      - name: Set up macOS environment
        if: runner.os == 'macOS'
        run: |
          # Print system information for debugging
          uname -a
          arch
          echo "npm_config_build_from_source=true" >> $GITHUB_ENV
          echo "npm_config_sqlite_libname=sqlite3" >> $GITHUB_ENV
          echo "npm_config_sqlite_libpath=$(brew --prefix)/opt/sqlite/lib" >> $GITHUB_ENV
          echo "npm_config_sqlite_include_dir=$(brew --prefix)/opt/sqlite/include" >> $GITHUB_ENV
          echo "npm_config_target=26.6.10" >> $GITHUB_ENV
          echo "npm_config_runtime=electron" >> $GITHUB_ENV
          echo "npm_config_disturl=https://electronjs.org/headers" >> $GITHUB_ENV
          # Use x64 architecture for GitHub Actions macOS runners
          echo "npm_config_target_arch=x64" >> $GITHUB_ENV
          echo "npm_config_arch=x64" >> $GITHUB_ENV
          brew install sqlite

      - name: Install dependencies
        run: |
          npm install
          cd release/app
          npm install --ignore-scripts
          cd ../..

      - name: Rebuild native modules for Electron (non-macOS)
        if: runner.os != 'macOS'
        run: |
          cd release/app
          npx electron-rebuild -f -w sqlite3 -v 26.6.10
          cd ../..

      - name: Rebuild native modules for macOS
        if: runner.os == 'macOS'
        run: |
          cd release/app
          # Remove existing sqlite3
          npm uninstall sqlite3
          # Install sqlite3 with specific flags for Electron
          npm install sqlite3@5.1.7 --build-from-source --runtime=electron --target=26.6.10 --dist-url=https://electronjs.org/headers
          # Check the installed packages
          npm list sqlite3
          # Check the binary module
          find node_modules/sqlite3 -name "*.node"
          cd ../..

      - name: Run tests
        run: npm test
