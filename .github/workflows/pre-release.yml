name: Pre-Release Binaries

on:
  push:
    tags:
      - 'v*.*.*-*'

jobs:
  setup-macos:
    uses: ./.github/workflows/setup-environment.yml
    with:
      os: macos-latest
      node-version: '20'

  setup-linux:
    uses: ./.github/workflows/setup-environment.yml
    with:
      os: ubuntu-20.04
      node-version: '20'

  setup-windows:
    uses: ./.github/workflows/setup-environment.yml
    with:
      os: windows-latest
      node-version: '20'

  build-macos:
    needs: setup-macos
    uses: ./.github/workflows/build-app.yml
    with:
      os: macos-latest
      build-type: mac

  build-linux:
    needs: setup-linux
    uses: ./.github/workflows/build-app.yml
    with:
      os: ubuntu-20.04
      build-type: linux

  build-windows:
    needs: setup-windows
    uses: ./.github/workflows/build-app.yml
    with:
      os: windows-latest
      build-type: win

  pre-release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-windows]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Generate changelog
        run: npx auto-changelog -p

      - name: Download macOS Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-macos-latest
          path: ./release/build/macos

      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-windows-latest
          path: ./release/build/windows

      - name: Download Ubuntu Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest
          path: ./release/build/ubuntu

      - name: List downloaded files
        run: ls -R ./release/build

      - name: Create GitHub Pre-Release
        id: create_pre_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./release/build/macos/*.dmg
            ./release/build/ubuntu/*.AppImage
            ./release/build/ubuntu/*.zip
            ./release/build/windows/*.exe
            ./release/build/windows/*.msi
          tag_name: ${{ github.ref }}
          name: Pre-Release ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
